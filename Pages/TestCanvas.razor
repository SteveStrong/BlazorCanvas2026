@page "/testcanvas"
@using Blazor.Extensions
@using Blazor.Extensions.Canvas
@using Blazor.Extensions.Canvas.Canvas2D

<PageTitle>Test Canvas</PageTitle>

<h1>Test BECanvas</h1>

<div>
    <p>Testing if BECanvas component loads properly...</p>
    
    <div style="border: 1px solid red; padding: 10px;">
        <BECanvas @ref="testCanvas" Width="400" Height="300" />
    </div>
    
    <button class="btn btn-primary mt-3" @onclick="TestCanvasCreation">Test Canvas Creation</button>
    
    <div class="mt-3">
        <p><strong>Status:</strong> @status</p>
        <p><strong>Context:</strong> @contextStatus</p>
    </div>
</div>

@code {
    private BECanvasComponent? testCanvas;
    private Canvas2DContext? context;
    private string status = "Not tested";
    private string contextStatus = "Not created";

    private async Task TestCanvasCreation()
    {
        try
        {
            status = "Attempting to create context...";
            StateHasChanged();
            
            context = await testCanvas!.CreateCanvas2DAsync();
            
            if (context != null)
            {
                contextStatus = "Context created successfully!";
                status = "Success - BECanvas is working!";
                
                // Simple test draw
                await context.SetFillStyleAsync("#00ff00");
                await context.FillRectAsync(10, 10, 50, 50);
            }
            else
            {
                contextStatus = "Context is null";
                status = "Failed - Context creation returned null";
            }
        }
        catch (Exception ex)
        {
            status = $"Error: {ex.Message}";
            contextStatus = "Failed to create context";
        }
        
        StateHasChanged();
    }
}